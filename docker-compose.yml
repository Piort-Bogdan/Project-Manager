version: '3.9'

services:
  backend:
    build:
        context: ./project_manager
        dockerfile: Dockerfile
    container_name: backend_app
    image: backend_app_image
    env_file:
      - docker-config.env
    volumes:
      - ./project_manager:/app
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
#    command: sh -c "python manage.py collectstatic --noinput && python manage.py migrate && gunicorn --workers=2 config.wsgi --bind 0.0.0.0:8000 "
    command: sh -c "python manage.py collectstatic --noinput && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#
#  backend_migration:
#    image: backend_app_image
#    container_name: backend_migration
#    command: sh -c "python manage.py makemigrations && python manage.py migrate"


  db:
    image: postgres:13
    container_name: backend_db
    env_file:
      - docker-config.env
    restart: always
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5



volumes:
    postgres_data:


